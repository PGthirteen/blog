(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{590:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"setstate同步异步场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setstate同步异步场景"}},[t._v("#")]),t._v(" setState同步异步场景")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v("通过"),s("code",[t._v("this.state")]),t._v("来访问"),s("code",[t._v("state")]),t._v("，通过"),s("code",[t._v("this.setState()")]),t._v("方法来更新"),s("code",[t._v("state")]),t._v("，当"),s("code",[t._v("this.setState()")]),t._v("方法被调用的时候，"),s("code",[t._v("React")]),t._v("会重新调用"),s("code",[t._v("render")]),t._v("方法来重新渲染"),s("code",[t._v("UI")]),t._v("。相比较于在使用"),s("code",[t._v("Hooks")]),t._v("完成组件下所需要的心智负担，"),s("code",[t._v("setState")]),t._v("就是在使用"),s("code",[t._v("class")]),t._v("完成组件下所需要的心智负担，当然所谓的心智负担也许叫做所必须的基础知识更加合适一些。")]),t._v(" "),s("h2",{attrs:{id:"描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),s("p",[s("code",[t._v("setState")]),t._v("只在合成事件和生命周期钩子函数中是异步的，而在原生事件中都是同步的，简单实现一个"),s("code",[t._v("React Class TS")]),t._v("例子。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import React from "react";\nimport "./styles.css";\n\ninterface Props{}\ninterface State{\n  count1: number;\n  count2: number;\n  count3: number;\n}\nexport default class App extends React.Component<Props, State>{\n  constructor(props: Props){\n    super(props);\n    this.state = {\n      count1: 0,\n      count2: 0,\n      count3: 0\n    }\n  }\n  \n  incrementAsync = () => {\n    console.log("incrementAsync before setState", this.state.count1);\n    this.setState({\n      count1: this.state.count1 + 1\n    });\n    console.log("incrementAsync after setState", this.state.count1);\n  }\n  incrementSync = () => {\n    setTimeout(() => {\n      console.log("incrementSync before setState", this.state.count2);\n      this.setState({\n        count2: this.state.count2 + 1\n      });\n      console.log("incrementSync after setState", this.state.count2);\n    },0);\n  }\n  incrementAsyncFn = () => {\n    console.log("incrementAsyncFn before setState", this.state.count3);\n    this.setState({\n        count3: this.state.count3 + 1\n        },\n        () => {\n            console.log("incrementAsyncFn after.1 setState", this.state.count3);\n        }\n    );\n    this.setState(state => {\n      console.log("incrementAsyncFn after.2 setState", state.count3);\n      return {count3: state.count3}\n    });\n  }\n  render(){\n    return <div>\n      <button onClick={this.incrementAsync}>异步</button>\n      <button onClick={this.incrementSync}>同步</button>\n      <button onClick={this.incrementAsyncFn}>异步函数参数</button>\n    </div>\n  }\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br")])]),s("p",[t._v("以此点击三个按钮的话，可以得到以下输出。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("incrementAsync before setState 0\nincrementAsync after setState 0\nincrementSync before setState 0\nincrementSync after setState 1\nincrementAsyncFn before setState 0\nincrementAsyncFn after.2 setState 1\nincrementAsyncFn after.1 setState 1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("首先看"),s("code",[t._v("incrementAsync")]),t._v("的结果，在这里我们可以看出，在合成事件调用"),s("code",[t._v("setState")]),t._v("之后，"),s("code",[t._v("this.state")]),t._v("是无法立即得到最新的值。"),s("br"),t._v("\n对于"),s("code",[t._v("incrementSync")]),t._v("的结果，在非合成事件的调用时，"),s("code",[t._v("this.state")]),t._v("是可以立即得到最新的值的，例如使用"),s("code",[t._v("addEventListener")]),t._v("、"),s("code",[t._v("setTimeout")]),t._v("、"),s("code",[t._v("setInterval")]),t._v("等。"),s("br"),t._v("\n对于"),s("code",[t._v("incrementAsyncFn")]),t._v("的两个结果，首先来说"),s("code",[t._v("after.2")]),t._v("的结果，对于"),s("code",[t._v("this.state")]),t._v("也是可以得到最新的值的，如果你需要基于当前的"),s("code",[t._v("state")]),t._v("来计算出新的值，那么就可以通过传递一个函数，而不是一个对象的方式来实现，因为"),s("code",[t._v("setState")]),t._v("的调用是分批的，所以通过传递函数可以链式地进行更新，当然前提是需要确保它们是一个建立在另一个之上的，也就是说传递函数的"),s("code",[t._v("setState")]),t._v("的值是依赖于上次一的"),s("code",[t._v("SetState")]),t._v("的，对于"),s("code",[t._v("after.1")]),t._v("的结果，"),s("code",[t._v("setState")]),t._v("函数的第二个参数是一个回调函数，在"),s("code",[t._v("setState")]),t._v("批量更新完成后可以拿到最新的值，而"),s("code",[t._v("after.2")]),t._v("也是属于批量更新需要调用的函数，所以"),s("code",[t._v("after.1")]),t._v("会在"),s("code",[t._v("after.2")]),t._v("后执行。")]),t._v(" "),s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v("将其实现为异步的动机主要是性能的考量，"),s("code",[t._v("setState")]),t._v("的异步并不是说内部由异步代码实现，其实本身执行的过程和代码都是同步的，只是合成事件和生命周期钩子函数的调用顺序在批处理更新之前，导致在合成事件和生命周期钩子函数中没法立马拿到更新后的值，形式了所谓的异步，实际上是否进行批处理是由其内部的"),s("code",[t._v("isBatchingUpdates")]),t._v("的值来决定的。"),s("br"),t._v(" "),s("code",[t._v("setState")]),t._v("依赖于合成事件，合成事件指的是"),s("code",[t._v("React")]),t._v("并不是将"),s("code",[t._v("click")]),t._v("等事件直接绑定在"),s("code",[t._v("DOM")]),t._v("上面，而是采用事件冒泡的形式冒泡到顶层"),s("code",[t._v("DOM")]),t._v("上，类似于事件委托，然后"),s("code",[t._v("React")]),t._v("将事件封装给正式的函数处理运行和处理。说完了合成事件再回到"),s("code",[t._v("setState")]),t._v("，"),s("code",[t._v("setState")]),t._v("的批量更新优化也是建立在合成事件上的，其会将所有的"),s("code",[t._v("setState")]),t._v("进行批处理，如果对同一个值进行多次 "),s("code",[t._v("setState")]),t._v("，"),s("code",[t._v("setState")]),t._v("的批量更新策略会对其进行覆盖，取最后一次的执行，如果是同时"),s("code",[t._v("setState")]),t._v("多个不同的值，在更新时也会对其进行合并批量更新，而在原生事件中，值会立即进行更新。"),s("br"),t._v("\n采用批量更新，简单来说就是为了提升性能，因为不采用批量更新，在每次更新数据都会对组件进行重新渲染，举个例子，让我们在一个方法内重复更新一个值。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("事实上，我们真正想要的其实只是最后一次更新而已，也就是说前三次更新都是可以省略的，我们只需要等所有状态都修改好了之后再进行渲染就可以减少一些性能损耗。还有一个例子，如果更改了"),s("code",[t._v("N")]),t._v("个状态，其实只需要一次"),s("code",[t._v("setState")]),t._v("就可以将"),s("code",[t._v("DOM")]),t._v("更新到最新，如果我们更新多个值。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("此处我们分三次修改了三种状态，但其实"),s("code",[t._v("React")]),t._v("只需要渲染一次，在"),s("code",[t._v("setState")]),t._v("批处理之后会将其合并，并进行一次"),s("code",[t._v("re-render")]),t._v("就可以将整个组件的"),s("code",[t._v("DOM")]),t._v("更新到最新，根本不需要关心这个"),s("code",[t._v("setState")]),t._v("到底是从哪个具体的状态发出来的。"),s("br"),t._v("\n那么还有一个问题，首先我们可以认同进行批处理更新对我们的性能是有益的，例如"),s("code",[t._v("Child")]),t._v("和"),s("code",[t._v("Parent")]),t._v("都调用"),s("code",[t._v("setState")]),t._v("，我们不需要重新渲染"),s("code",[t._v("Child")]),t._v("两次。但是此时我们可能会想到一个问题，为什么不能如同"),s("code",[t._v("Vue")]),t._v("一样，"),s("code",[t._v("Vue")]),t._v("是在值更新之后触发"),s("code",[t._v("setter")]),t._v("然后进行更新，更新的过程同样也是采用异步渲染，也会将所有触发"),s("code",[t._v("Watcher")]),t._v("的"),s("code",[t._v("update")]),t._v("进行去重合并再去更新视图，也就是说"),s("code",[t._v("Vue")]),t._v("是立即修改了值，而后再去更新视图的。也就是说，相比较于"),s("code",[t._v("React")]),t._v("，为什么不能在同样做批处理的情况下，立即将"),s("code",[t._v("setState")]),t._v("更新写入"),s("code",[t._v("this.state")]),t._v("而不等待协调结束。"),s("br"),t._v("\n任何一种解决方案都有权衡，对于"),s("code",[t._v("Vue")]),t._v("来说因为其是通过劫持了数据的"),s("code",[t._v("setter")]),t._v("过程，在使用的也是直接使用"),s("code",[t._v("=")]),t._v("直接赋值的，而在赋值之后进行视图的更新也是一个自然的过程，如果类似于"),s("code",[t._v("React")]),t._v("一样在"),s("code",[t._v("=")]),t._v("之后这个值依然没有变化，在直觉上是非常不符合常理的，虽然"),s("code",[t._v("Vue")]),t._v("是通过劫持"),s("code",[t._v("setter")]),t._v("实现的视图更新，但是做到如同"),s("code",[t._v("React")]),t._v("一样并不是不可能的，这是"),s("code",[t._v("Vue")]),t._v("采用的解决方案上的权衡，当然这只是可能的一个理由，说是问题的权衡，实际上还是需要对比"),s("code",[t._v("React")]),t._v("来看，对于"),s("code",[t._v("React")]),t._v("中要处理的问题，"),s("code",[t._v("Vue")]),t._v("自然会有自己解决方案的权衡，归根到底还是框架的设计哲学的问题。对于上面提出的在同样做批处理的情况下，立即将"),s("code",[t._v("setState")]),t._v("更新写入"),s("code",[t._v("this.state")]),t._v("而不等待协调结束的这个问题，"),s("code",[t._v("dan")]),t._v("给予了两个理由，在此简作总结，完整的英文版本还请看参考中的"),s("code",[t._v("github issue")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"保证内部数据统一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保证内部数据统一"}},[t._v("#")]),t._v(" 保证内部数据统一")]),t._v(" "),s("p",[t._v("即使"),s("code",[t._v("state")]),t._v("是同步更新的，但"),s("code",[t._v("props")]),t._v("是不会的，在重新渲染父组件之前，无法知道"),s("code",[t._v("props")]),t._v("，如果同步执行此操作，批处理就会消失。现在"),s("code",[t._v("React")]),t._v("提供的对象"),s("code",[t._v("state")]),t._v("、"),s("code",[t._v("props")]),t._v("、"),s("code",[t._v("refs")]),t._v("在内部是一致的。这意味着如果只使用这些对象，则可以保证它们引用完全协调的树，即使它是该树的旧版本。当仅使用"),s("code",[t._v("state")]),t._v("时，同步刷新的模式将起作用。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("但是，假设需要提升此状态以在几个组件之间共享，因此将其移动到父级，也就是说有"),s("code",[t._v("props")]),t._v("参与到了传值，那么同步"),s("code",[t._v("setState")]),t._v("模式就会有问题，此时将"),s("code",[t._v("state")]),t._v("提升到了父组件，利用"),s("code",[t._v("props")]),t._v("将值传导子组件。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onIncrement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onIncrement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("这是因为在这个解决方案中，"),s("code",[t._v("this.state")]),t._v("会立即刷新，而"),s("code",[t._v("this.props")]),t._v("不会，而且我们不能在不重新渲染父对象的情况下立即刷新"),s("code",[t._v("this.props")]),t._v("，这意味着我们将不得不放弃批处理的策略。还有更微妙的情况说明这如何破坏一致性的，例如这种方案正在混合来自"),s("code",[t._v("props")]),t._v("尚未刷新和"),s("code",[t._v("state")]),t._v("建议立即刷新的数据以创建新状态。在"),s("code",[t._v("React")]),t._v("中，"),s("code",[t._v("this.state")]),t._v("和"),s("code",[t._v("this.props")]),t._v("都只在协调和刷新之后更新，所以你会在"),s("code",[t._v("refactoring")]),t._v("之前和之后看到"),s("code",[t._v("0")]),t._v("被打印出来。这使得提升状态安全。在某些情况下这可能会带来不便，特别是对于来自更多"),s("code",[t._v("OO")]),t._v("背景的人来说，他们只想多次改变状态，而不是考虑如何在一个地方表示完整的状态更新，我可以理解这一点，尽管我确实认为从调试的角度来看，保持状态更新的集中更加清晰。总而言之，"),s("code",[t._v("React")]),t._v("模型并不总是会产生最简洁的代码，但它在内部是一致的，并确保提升状态是安全的。")]),t._v(" "),s("h3",{attrs:{id:"启用并发更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用并发更新"}},[t._v("#")]),t._v(" 启用并发更新")]),t._v(" "),s("p",[t._v("从概念上讲"),s("code",[t._v("React")]),t._v("的行为就好像每个组件都有一个更新队列，我们在这里讨论是否同步刷新"),s("code",[t._v("state")]),t._v("有一个前提那就是我们默认更新节点是遵循特定的顺序的，但是按默认顺序更新组件在以后的"),s("code",[t._v("react")]),t._v("中可能就变了。对于现在我们一直在谈论的异步渲染，我承认我们在传达这意味着什么方面做得不是很好，但这就是研发的本质：你追求一个在概念上看起来很有前途的想法，但只有在花了足够的时间之后才能真正理解它的含义。"),s("br"),t._v("\n对于这个理由，是"),s("code",[t._v("React")]),t._v("发展的一个方向。我们一直在解释异步渲染的一种方式是"),s("code",[t._v("React")]),t._v("可以根据"),s("code",[t._v("setState()")]),t._v("调用的来源分配不同的优先级：事件处理程序、网络响应、动画等。例如你现在正在打字，那么"),s("code",[t._v("TextBox")]),t._v("组件需要实时的刷新，但是当你在输入的时候，来了一个信息，这个时候可能让信息的渲染延迟到某个阈值，而不是因为阻塞线程而让输入卡顿。如果我们让某些更新具有较低优先级，我们可以将它们的渲染分成几毫秒的小块，这样用户就不会注意到它们。异步"),s("code",[t._v("rendering")]),t._v("不仅仅是性能上的优化，我们认为这是"),s("code",[t._v("React")]),t._v("组件模型可以做什么的根本性转变。例如，考虑从一个屏幕导航到另一个屏幕的情况，通常会在渲染新屏幕时显示一个导航器，但是如果导航速度足够快，闪烁并立即隐藏导航器会导致用户体验下降，更糟糕的是如果有多个级别的组件具有不同的异步依赖项例如数据、代码、图像等，您最终会得到一连串短暂闪烁的导航器。由于所有的"),s("code",[t._v("DOM")]),t._v("重排，这既在视觉上令人不快，又使您的应用程序在实践中变慢。如果当您执行一个简单的"),s("code",[t._v("setState()")]),t._v("来呈现不同的视图时，我们可以开始在后台呈现更新后的视图。如果您自己不编写任何协调代码，您可以选择在更新时间超过某个阈值时显示导航器，否则当整个新子树的异步依赖项是时让"),s("code",[t._v("React")]),t._v("执行无缝转换使满意。请注意，这只是可能的，因为"),s("code",[t._v("this.state")]),t._v("不会立即刷新，如果它被立即刷新，我们将无法开始在后台渲染视图的新版本，而旧版本仍然可见且可交互，他们独立的状态更新会发生冲突。")]),t._v(" "),s("h2",{attrs:{id:"每日一题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[t._v("#")]),t._v(" 每日一题")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://github.com/WindrunnerMax/EveryDay\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://www.jianshu.com/p/cc12e9a8052c\nhttps://juejin.cn/post/6844903636749778958\nhttps://zh-hans.reactjs.org/docs/faq-state.html\nhttps://blog.csdn.net/zz_jesse/article/details/118282921\nhttps://blog.csdn.net/weixin_44874595/article/details/104270057\nhttps://github.com/facebook/react/issues/11527#issuecomment-360199710\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);