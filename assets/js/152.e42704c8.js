(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{596:function(e,v,o){"use strict";o.r(v);var _=o(0),r=Object(_.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"router和-route的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#router和-route的区别"}},[e._v("#")]),e._v(" $router和$route的区别")]),e._v(" "),v("p",[v("code",[e._v("Vue Router")]),e._v("是"),v("code",[e._v("Vue.js")]),e._v("的路由管理器，路由就是"),v("code",[e._v("SPA")]),e._v("单页应用的访问路径，在"),v("code",[e._v("Vue")]),e._v("实例内部，可以通过"),v("code",[e._v("$router")]),e._v("访问路由实例，即在路由定义文件中"),v("code",[e._v("export default")]),e._v("的"),v("code",[e._v("new Router(/*...*/)")]),e._v("路由实例，通过"),v("code",[e._v("$route")]),e._v("可以访问当前激活的路由的状态信息，包含了当前"),v("code",[e._v("URL")]),e._v("解析得到的信息，还有"),v("code",[e._v("URL")]),e._v("匹配到的路由记录，可以将"),v("code",[e._v("$router")]),e._v("理解为一个容器去管理了一组"),v("code",[e._v("$route")]),e._v("，而"),v("code",[e._v("$route")]),e._v("是进行了当前"),v("code",[e._v("URL")]),e._v("和组件的映射。")]),e._v(" "),v("h2",{attrs:{id:"router对象属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#router对象属性"}},[e._v("#")]),e._v(" $router对象属性")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("$router.app")]),e._v(": 配置了"),v("code",[e._v("router")]),e._v("的"),v("code",[e._v("Vue")]),e._v("根实例。")]),e._v(" "),v("li",[v("code",[e._v("$router.mode")]),e._v(": 路由使用的模式。")]),e._v(" "),v("li",[v("code",[e._v("$router.currentRoute")]),e._v(": 当前路由对应的路由信息对象。")])]),e._v(" "),v("h2",{attrs:{id:"router对象方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#router对象方法"}},[e._v("#")]),e._v(" $router对象方法")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("$router.beforeEach(to, from, next)")]),e._v(": 全局前置守卫，守卫是异步解析执行，此时导航在所有守卫"),v("code",[e._v("resolve")]),e._v("完之前一直处于等待中状态，守卫方法接收三个参数: "),v("code",[e._v("to: Route")]),e._v("即将要进入的目标路由对象、"),v("code",[e._v("from: Route")]),e._v(": 当前导航正要离开的路由、"),v("code",[e._v("next: Function")]),e._v(": 调用该方法来"),v("code",[e._v("resolve")]),e._v("这个钩子，执行效果依赖"),v("code",[e._v("next")]),e._v("方法的调用参数，例如"),v("code",[e._v("next()")]),e._v("、"),v("code",[e._v("next(false)")]),e._v("、"),v("code",[e._v("next('/')")]),e._v("、"),v("code",[e._v("next({path:'/',name:'home',replace:true,query:{q:1}})")]),e._v("、"),v("code",[e._v("next(error)")]),e._v("等，通常在"),v("code",[e._v("main.js")]),e._v("中"),v("code",[e._v("import")]),e._v("的"),v("code",[e._v("Vue Router")]),e._v("实例中直接定义导航守卫，当然也可在"),v("code",[e._v("Vue")]),e._v("实例中访问"),v("code",[e._v("$router")]),e._v("来定义。")]),e._v(" "),v("li",[v("code",[e._v("$router.beforeResolve(to, from, next)")]),e._v(": 全局解析守卫，在"),v("code",[e._v("beforeRouteEnter")]),e._v("调用之后调用，同样接收"),v("code",[e._v("to")]),e._v("、"),v("code",[e._v("from")]),e._v("、"),v("code",[e._v("next")]),e._v("三个参数。")]),e._v(" "),v("li",[v("code",[e._v("$router.afterEach(to, from)")]),e._v(": 全局后置钩子，进入路由之后调用，接收"),v("code",[e._v("to")]),e._v("、"),v("code",[e._v("from")]),e._v("两个参数。")]),e._v(" "),v("li",[v("code",[e._v("$router.push(location[, onComplete[, onAbort]])")]),e._v(": 编程式导航，使用"),v("code",[e._v("$router.push")]),e._v("方法导航到不同的"),v("code",[e._v("URL")]),e._v("，此方法会向"),v("code",[e._v("history")]),e._v("栈添加一个新的记录，当点击浏览器后退按钮时，则回到之前的"),v("code",[e._v("URL")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("$router.replace(location[, onComplete[, onAbort]])")]),e._v(": 编程式导航，跟"),v("code",[e._v("$router.push")]),e._v("很像，唯一的不同就是，其不会向"),v("code",[e._v("history")]),e._v("添加新记录，而是跟它的方法名一样替换掉当前的"),v("code",[e._v("history")]),e._v("记录。")]),e._v(" "),v("li",[v("code",[e._v("$router.go(n)")]),e._v(": 编程式导航，这个方法的参数是一个整数，意思是在"),v("code",[e._v("history")]),e._v("记录中向前或者后退多少步，类似"),v("code",[e._v("window.history.go(n)")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("$router.back()")]),e._v(": 编程式导航，后退一步记录，等同于"),v("code",[e._v("$router.go(-1)")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("$history.forward()")]),e._v(": 编程式导航，前进一步记录，等同于"),v("code",[e._v("$router.go(1)")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("$router.getMatchedComponents([location])")]),e._v(": 返回目标位置或是当前路由匹配的组件数组 ，是数组的定义或构造类，不是实例，通常在服务端渲染的数据预加载时使用。")]),e._v(" "),v("li",[v("code",[e._v("$router.resolve(location[, current[, append]])")]),e._v(": 解析目标位置，格式和"),v("code",[e._v("<router-link>")]),e._v("的"),v("code",[e._v("to prop")]),e._v("相同，"),v("code",[e._v("current")]),e._v("是当前默认的路由，"),v("code",[e._v("append")]),e._v("允许在"),v("code",[e._v("current")]),e._v("路由上附加路径，如同 "),v("code",[e._v("router-link")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("$router.addRoutes(route)")]),e._v(": 动态添加更多的路由规则，参数必须是一个符合"),v("code",[e._v("routes")]),e._v("选项要求的数组。")]),e._v(" "),v("li",[v("code",[e._v("$router.onReady(callback[, errorCallback])")]),e._v(": 该方法把一个回调排队，在路由完成初始导航时调用，这意味着它可以解析所有的异步进入钩子和路由初始化相关联的异步组件，这可以有效确保服务端渲染时服务端和客户端输出的一致，第二个参数"),v("code",[e._v("errorCallback")]),e._v("会在初始化路由解析运行出错时被调用。")]),e._v(" "),v("li",[v("code",[e._v("$router.onError(callback)")]),e._v(": 注册一个回调，该回调会在路由导航过程中出错时被调用，被调用的错误必须是下列情形中的一种，错误在一个路由守卫函数中被同步抛出、错误在一个路由守卫函数中通过调用"),v("code",[e._v("next(err)")]),e._v("的方式异步捕获并处理、渲染一个路由的过程中需要尝试解析一个异步组件时发生错误。")])]),e._v(" "),v("h2",{attrs:{id:"route对象属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#route对象属性"}},[e._v("#")]),e._v(" $route对象属性")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("$route.path")]),e._v(": 返回字符串，对应当前路由的路径，总是解析为绝对路径。")]),e._v(" "),v("li",[v("code",[e._v("$route.params")]),e._v(": 返回一个"),v("code",[e._v("key-value")]),e._v("对象，包含了动态片段和全匹配片段，如果没有路由参数，就是一个空对象。")]),e._v(" "),v("li",[v("code",[e._v("$route.query")]),e._v(": 返回一个"),v("code",[e._v("key-value")]),e._v("对象，表示"),v("code",[e._v("URL")]),e._v("查询参数。")]),e._v(" "),v("li",[v("code",[e._v("$route.hash")]),e._v(": 返回当前路由的带"),v("code",[e._v("#")]),e._v("的"),v("code",[e._v("hash")]),e._v("值，如果没有"),v("code",[e._v("hash")]),e._v("值，则为空字符串。")]),e._v(" "),v("li",[v("code",[e._v("$route.fullPath")]),e._v(": 返回完成解析后的"),v("code",[e._v("URL")]),e._v("，包含查询参数和"),v("code",[e._v("hash")]),e._v("的完整路径。")]),e._v(" "),v("li",[v("code",[e._v("$route.matched")]),e._v(": 返回一个数组，包含当前路由的所有嵌套路径片段的路由记录，路由记录就是"),v("code",[e._v("routes")]),e._v("配置数组中的对象副本。")]),e._v(" "),v("li",[v("code",[e._v("$route.name")]),e._v(": 如果存在当前路由名称则返回当前路由的名称。")]),e._v(" "),v("li",[v("code",[e._v("$route.redirectedFrom")]),e._v(": 如果存在重定向，即为重定向来源的路由的名字。")])]),e._v(" "),v("h2",{attrs:{id:"每日一题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[e._v("#")]),e._v(" 每日一题")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://github.com/WindrunnerMax/EveryDay\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br")])]),v("h2",{attrs:{id:"参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("https://router.vuejs.org/zh/api/#routes\nhttps://juejin.im/post/6844903665388486664\nhttps://juejin.im/post/6844903608534695943\nhttps://juejin.im/post/6844903892560379917\nhttps://juejin.im/post/6844904005236162568\nhttps://segmentfault.com/a/1190000016662929\n")])]),e._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[e._v("1")]),v("br"),v("span",{staticClass:"line-number"},[e._v("2")]),v("br"),v("span",{staticClass:"line-number"},[e._v("3")]),v("br"),v("span",{staticClass:"line-number"},[e._v("4")]),v("br"),v("span",{staticClass:"line-number"},[e._v("5")]),v("br"),v("span",{staticClass:"line-number"},[e._v("6")]),v("br")])])])}),[],!1,null,null,null);v.default=r.exports}}]);